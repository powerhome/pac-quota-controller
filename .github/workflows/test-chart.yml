name: Test Chart

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test-e2e:
    name: Run on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Clone the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version-file: go.mod

      - name: Install the latest version of kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Verify kind installation
        run: kind version

      - name: Create kind cluster
        run: kind create cluster

      - name: Prepare pac-quota-controller
        run: |
          go mod tidy
          make docker-build IMG=pac-quota-controller:v0.1.0
          kind load docker-image pac-quota-controller:v0.1.0

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Verify Helm installation
        run: helm version

      - name: Lint Helm Chart
        run: |
          helm lint ./charts/pac-quota-controller

      - name: Install cert-manager via Helm
        run: |
          make install-cert-manager

# TODO: Uncomment if Prometheus is enabled
#      - name: Install Prometheus Operator CRDs
#        run: |
#          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#          helm repo update
#          helm install prometheus-crds prometheus-community/prometheus-operator-crds
#
#      - name: Install Prometheus via Helm
#        run: |
#          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#          helm repo update
#          helm install prometheus prometheus-community/prometheus --namespace monitoring --create-namespace
#
#      - name: Wait for Prometheus to be ready
#        run: |
#          kubectl wait --namespace monitoring --for=condition=available --timeout=300s deployment/prometheus-server

      - name: Install Helm chart for project
        run: make helm-deploy IMG=pac-quota-controller:v0.1.0


      - name: Check Helm release status
        run: |
          helm status pac-quota-controller --namespace pac-quota-controller-system

      - name: Dump cluster info on failure (Helm Deploy)
        if: failure()
        run: |
          echo "Dumping cluster state after potential Helm deploy failure..."
          kubectl get all -n pac-quota-controller-system
          kubectl describe pods -n pac-quota-controller-system
          kubectl logs -l control-plane=controller-manager -n pac-quota-controller-system --tail=100 || true
          echo "Dumping cert-manager state..."
          kubectl get all -n cert-manager
          kubectl describe pods -n cert-manager
          kubectl logs -l app=cert-manager -n cert-manager --tail=100 || true
          kubectl logs -l app.kubernetes.io/instance=cert-manager -n cert-manager --tail=100 || true


# TODO: Uncomment if prometheus.enabled is set to true to confirm that the ServiceMonitor gets created
#      - name: Check Presence of ServiceMonitor
#        run: |
#          kubectl wait --namespace pac-quota-controller-system --for=jsonpath='{.kind}'=ServiceMonitor servicemonitor/pac-quota-controller-manager-metrics-monitor
