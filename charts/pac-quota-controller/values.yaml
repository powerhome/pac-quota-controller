controllerManager:
  #
  # Object Count Quotas (Native & Extended Resources)
  #
  # You can specify object count quotas for native and extended Kubernetes resources using the 'hard' field in the ClusterResourceQuota spec.
  # Examples:
  #
  #   hard:
  #     pods: "10"                       # Pod count
  #     services: "5"                    # Service count
  #     services.loadbalancers: "2"      # Service type=LoadBalancer count
  #     ingresses: "3"                    # Ingress count
  #     configmaps: "20"                 # ConfigMap count
  #     # ...and so on for all supported resource types
  #
  # Supported extended resource keys include:
  #   - services.loadbalancers (Service objects with type=LoadBalancer)
  #   - services.nodeports (Service objects with type=NodePort)
  #   - ingresses (Ingress objects)
  #
  # Subtype quotas (e.g., services.loadbalancers) cannot exceed the total for the parent resource (e.g., services).
  #
  # Custom CRDs are not supported for object count quotas.
  # imagePullSecrets:
  #   - name: ghcr-creds
  replicas: 1
  # The label key used to exclude namespaces from reconciliation.
  # Namespaces with this label (set to any value) will be ignored by the controller.
  excludeNamespaceLabelKey: "pac-quota-controller.powerapp.cloud/exclude"
  container:
    image:
      repository: ghcr.io/powerhome/pac-quota-controller
      tag: latest
      pullPolicy: IfNotPresent
    args:
      - "--leader-elect"
      - "--metrics-bind-address=:8443"
    webhookCertPath: "/tmp/k8s-webhook-server/serving-certs"
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 64Mi
    livenessProbe:
      initialDelaySeconds: 15
      periodSeconds: 20
      httpGet:
        path: /healthz
        port: 9443
        scheme: HTTPS
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      httpGet:
        path: /readyz
        port: 9443
        scheme: HTTPS
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - "ALL"
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 15
  serviceAccount:
    name: pac-quota-controller-manager
    annotations: {}

rbac:
  enable: true

metrics:
  enable: true

prometheus:
  enable: false

certmanager:
  # If true, the chart will create Certificate resources for cert-manager to issue certificates for webhooks and metrics.
  # If false, you must provide your own certificates via webhook.customTLS.secretName and metrics.customTLS.secretName.
  enable: true
  # The installation of cert-manager itself is no longer handled by this chart.
  # Please install cert-manager separately in your cluster. See README for details.

networkPolicy:
  enable: true

webhook:
  enable: true
  dryRunOnly: false

excludedNamespaces:
  - kube-system
